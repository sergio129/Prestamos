name: Deploy to AWS EC2

on:
  push:
    branches:
      - master  # o la rama que uses

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Save private key
        run: |
          echo "${{ secrets.AWS_EC2_KEY }}" > ssh_key.pem
          chmod 600 ssh_key.pem

      - name: Validar secretos
        run: |
          echo "Validando secretos..."
          if [ -z "${{ secrets.AWS_USER }}" ]; then echo "❌ AWS_USER está vacío"; exit 1; else echo "✅ AWS_USER OK"; fi
          if [ -z "${{ secrets.AWS_HOST }}" ]; then echo "❌ AWS_HOST está vacío"; exit 1; else echo "✅ AWS_HOST OK"; fi

      - name: Install essential tools
        run: |
          sudo apt-get update
          sudo apt-get install -y rsync openssh-client

      - name: Copy project to EC2
        run: |
          echo "Copiando archivos a ${{ secrets.AWS_USER }}@${{ secrets.AWS_HOST }}..."
          mkdir -p ~/.ssh
          ssh-keyscan ${{ secrets.AWS_HOST }} >> ~/.ssh/known_hosts
          scp -v -i ssh_key.pem -o StrictHostKeyChecking=no -r ./* ${{ secrets.AWS_USER }}@${{ secrets.AWS_HOST }}:~/temp_update

      - name: Run deploy commands on EC2
        run: |
          ssh -v -i ssh_key.pem -o StrictHostKeyChecking=no ${{ secrets.AWS_USER }}@${{ secrets.AWS_HOST }} << 'EOF'
            set -e
            echo "Respaldando versión actual..."
            mkdir -p ~/Prestamos_backup_$(date +%Y%m%d%H%M%S)
            cp -r ~/Prestamos/* ~/Prestamos_backup_$(date +%Y%m%d%H%M%S)/ || true

            echo "Actualizando archivos..."
            mkdir -p ~/Prestamos
            rm -rf ~/Prestamos/*
            cp -r ~/temp_update/* ~/Prestamos/

            echo "Reconstruyendo contenedores Docker..."
            cd ~/Prestamos
            docker-compose down
            docker-compose up -d --build
            docker ps
          EOF
